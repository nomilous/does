// Generated by CoffeeScript 1.6.3
var entities, id_seq;

id_seq = 0;

entities = {};

Object.defineProperty(Object.prototype, 'does', {
  enumerable: false,
  get: function() {
    return function(opts) {
      var fnName, _fn,
        _this = this;
      if (this.$$id == null) {
        this.$$id = ++id_seq;
        entities[this.$$id] = {
          object: this
        };
      }
      _fn = function(fnName) {
        var functions, origFn, _base, _base1;
        origFn = _this[fnName];
        functions = (_base = entities[_this.$$id]).functions || (_base.functions = {});
        if (functions[fnName] == null) {
          functions[fnName] = {
            orig: origFn
          };
        }
        (_base1 = functions[fnName]).expected || (_base1.expected = []);
        functions[fnName].expected.push(opts[fnName]);
        return _this[fnName] = function() {
          var fn;
          fn = functions[fnName].expected.shift();
          if (typeof fn === 'function') {
            return fn();
          }
          throw new Error("Unexpected call to " + entities[this.$$id].object + "." + fnName + "()");
        };
      };
      for (fnName in opts) {
        if (fnName === 'does') {
          continue;
        }
        _fn(fnName);
      }
      return this;
    };
  }
});

Object.defineProperty(Object.prototype, 'did', {
  enumerable: false,
  get: function() {
    var error, fnName;
    error = "";
    for (fnName in entities[this.$$id].functions) {
      if (entities[this.$$id].functions[fnName].expected.length > 0) {
        error || (error = "Failed to call expected " + entities[this.$$id].object + "." + fnName + "()");
      }
      entities[this.$$id].object[fnName] = entities[this.$$id].functions[fnName].orig;
    }
    entities[this.$$id].functions = {};
    if (error.length > 0) {
      throw new Error(error);
    }
    return this;
  }
});

module.exports.entities = entities;
