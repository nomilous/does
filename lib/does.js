// Generated by CoffeeScript 1.6.3
var deferred, testable;

deferred = require('also').deferred;

testable = void 0;

module.exports._does = function() {
  return testable;
};

module.exports.does = function(config) {
  var api, local, mode, seq;
  if (config == null) {
    config = {};
  }
  mode = config.mode || 'spec';
  seq = 0;
  if (mode === 'spec') {
    testable = local = {
      expectations: {},
      instate: deferred(function(action, object) {
        var id;
        if (object == null) {
          return action.reject(new Error("does can't expect undefined to do stuff"));
        }
        id = ++seq;
        object.does = function() {};
        return action.resolve(object);
      }),
      expect: function() {},
      verify: function() {}
    };
  } else {
    throw new Error("does doesn't " + mode);
  }
  return api = {
    instate: local.instate
  };
};
