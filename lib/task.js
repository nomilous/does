// Generated by CoffeeScript 1.4.0
var deferred, fluent, pipeline, tasks, uniq;

fluent = require('./decorators').fluent;

uniq = require('./decorators').uniq;

deferred = require('./decorators').deferred;

pipeline = require('when/pipeline');

tasks = {};

module.exports = {
  create: uniq(tasks, function(taskTitle) {
    var actions, middleware, running, task;
    running = false;
    actions = {};
    middleware = [];
    task = {
      does: fluent(uniq(actions, function(actionTitle, actionFn) {
        return middleware.push(deferred(actionFn));
      })),
      start: function(input) {
        var finished, fn, functions;
        finished = [
          deferred(function(deferral, result) {
            running = false;
            return deferral.resolve(result);
          })
        ];
        running = true;
        functions = [];
        return pipeline((function() {
          var _i, _len, _ref, _results;
          _ref = middleware.concat(finished);
          _results = [];
          for (_i = 0, _len = _ref.length; _i < _len; _i++) {
            fn = _ref[_i];
            functions.push(fn);
            _results.push(function() {
              return functions.shift()(input);
            });
          }
          return _results;
        })());
      }
    };
    Object.defineProperty(task, 'title', {
      get: function() {
        return taskTitle;
      },
      readonly: true,
      enumerable: true
    });
    Object.defineProperty(task, 'running', {
      get: function() {
        return running;
      },
      readonly: true,
      enumerable: true
    });
    return task;
  })
};
