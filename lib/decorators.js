// Generated by CoffeeScript 1.4.0
var Defer, argsOf;

Defer = require('when').defer;

argsOf = function(fn) {
  try {
    return fn.toString().match(/function\W*\((.*)\)/)[1].split(',').map(function(arg) {
      return arg.trim();
    }).filter(function(arg) {
      return arg !== '';
    });
  } catch (error) {
    return [];
  }
};

module.exports = {
  fluent: function(fn) {
    return function() {
      fn.apply(this, arguments);
      return this;
    };
  },
  uniq: function(index, fn) {
    return function(value) {
      if (index[value] != null) {
        throw new Error("received duplicate " + (argsOf(fn)[0]) + " as '" + value + "'");
      }
      index[value] = {};
      return fn.apply(this, arguments);
    };
  },
  defer: function(fn) {
    var args;
    args = [Defer()];
    return function() {
      var arg, _i, _len;
      for (_i = 0, _len = arguments.length; _i < _len; _i++) {
        arg = arguments[_i];
        args.push(arg);
      }
      fn.apply(this, args);
      return args[0].promise;
    };
  }
};
